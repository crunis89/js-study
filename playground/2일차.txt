자바스크립트는 인터프린터 언어이기 때문에 위에서 부터 순차적으로 처리한다.



node.js 는 서버개발환경을 만들때 주로 사용된다.


웹애플리케이션에서의 클라이언트는 브라우져를 뜻한다.


코드를 쓸때 web-api 에서 구동해야하는데 ecmascript 에서 구동해야하느지,
노드js(서버)에서 할건지 정해야한다.


R2p2 : ?//


지금은 분리하지만 node.js 는 세개지를 하나로 본다.


html 에서 head 는 해당 정보에 대한 정보이다(meta)


렌더링 엔진과 자바스크립트엔진은 통역을 한다 위에서부터 아래로

바디태그 직전에 놓는 것이 좋다 ( html 료소들이 만들어져야 -)


* 들여쓰기는 스페이스 2번으로 통일 *


npm (노드패키지매니저)

cpu는 계산만 하는애
기억하는장치 메모리


리터럴 ?


1byte = 8bit 
256 ->ASCII

변수의선언 : '1.메모리 공간 확보 후 2.해당 메모리 공간의 주소를 연결하여 값을 저장할 수 있도록 준비하는 것
변수를 선언할 때는 var, let, const 키워드 (명령어)
var a; 변수선언 / a; 변수 참조
변수의선언=초기화=undefined; (정의되지않음)
var a = 1; 
->
var a ; 선언
a = undefined (먼저할당)
a = 1; 재할당
재할당을 하면 주소가 바뀐다. (재할당은 변수의 값을 변경하는 행위)
udefined 는 원시값(변경불가능한값)이기 때문에 주소가 바뀐다. 
그럼 1에서 2로 바뀌면 ? 
*객체와 원시값의 차이 알아보기 (객체는 왜 바뀌게 하고 원시값은 왜 안바뀌게 해놨을까?)
숫자, 문자열, 불리언, null, undefined 인 다섯가지 기본 타입(원시값)
* undefined : 원시값 :변경불가능한 값


run time : 프로그램이 실행되고 있는 상태
모든 선언문은 run time 이전에 실행된다

*변수 호이스팅 : 선언문을 먼저 읽어주는(끌어오는 맨위로)
변수의 선언됬는지 체크여부:메모리상에 선언된 변수와 값을 가지고있다


변수란 하나의 값을 저장하기 위해 확보한 메모리 공간 또는 그 공간을 가리키는 이름이며 그이름을 식별자 라고도 합니다.
변수 안에 할당되어있는 값을 꺼내오는것을 참조라고 합니다.(꺼내오는 행위)
메모리에 저장되어있는 값(어떤방에있는지 모름)을 원할때 불러오기 위해 변수(방의이름)가 필요합니다.
또한 프로그램이 실행되고 있는 상태를 런타임이라고 하며, 모든 선언문은 런타임 이전에 실행되는데 이것을 변수 호이스팅이라고 합니다.



변수이름,함수이름,클래스등 대부분의 이름은 식별자 이다.

값으로 평가된다고 한다.
var result = 10 + 20;  -> 10 + 20은 표현식이라 한다(값을만든다=값으로 평가된다)


var result = 10 + 20 ; 변수 선언문  / result = 10 + 20 ; 변수 할당문

스코프 : 변수들의 유효범위 ( ex 폴더) 
폴더내에서는 같은네이밍의 파일을 생성할수 없지만 폴더를 벗어나면 동일한 네이밍의 파일을 만들 수 있다.


const 키워드는 상수로써 재할당이 금지된다.

* 식별자는 특수문자를 제외한 문자, 숫자, underscore( _ ), 달러 기호($)를 포함할 수 있다.
단, 식별자는 특수문자를 제외한 문자, underscore( _ ), 달러 기호($)로 시작해야 한다. 숫자로 시작하는 것은 허용하지 않는다.
예약어는 식별자로 사용할 수 없다.

예약어
예약어(reserved word)는 프로그래밍 언어에서 사용되고 있거나 사용될 예정인 단어들을 말한다. 자바스크립트의 예약어는 아래와 같다.


변수의 값을 재할당했을경우 새로운 공간을 확보및 저장 하는데, 그 전에 있던 값들은 가비지 컬렉터에 의해 자동삭제 되나
언제해제될지 예측 불가 / 그렇다면 재할당을 많이 할경우 불필요한 값(사용된 공간)이 늘어나서 느려지던가 하는 이슈가 생기는지 ?


'